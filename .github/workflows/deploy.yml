name: D√©ploiement API Catways

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: R√©cup√©ration du code source
        uses: actions/checkout@v3

      - name: Configuration de Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'

      - name: Installation des d√©pendances
        run: npm install

      - name: Lancement de l'API en arri√®re-plan
        run: |
          cd api 
          npm start &
          sleep 10 # Attendre 10 secondes pour que le serveur d√©marre

      - name: üîç V√©rification du serveur
        run: |
          echo "V√©rification de l'API..."
          sleep 3
          curl -I http://localhost:8080 || (echo "‚ùå L'API ne r√©pond pas !" && exit 1)

      - name: R√©cup√©ration du Token d'authentification pour les tests
        run: |
          echo "Tentative d'authentification..."
          TOKEN=$(curl -s -X POST "http://localhost:8080/auth/login" \
          -H "Content-Type: application/json" \
          -d '{"email": "${{ secrets.EMAIL_ADMIN }}", "password": "${{ secrets.PASSWORD_ADMIN }}"}' | jq -r .token)
          
          if [[ -z "$TOKEN" || "$TOKEN" == "null" ]]; then
            echo "‚ùå √âchec de l'authentification, aucun token r√©cup√©r√©."
            exit 1
          fi
          
          echo "TOKEN=$TOKEN" >> $GITHUB_ENV
          echo "üü¢ Token r√©cup√©r√© avec succ√®s"


      - name: Ex√©cution des tests avec Mocha
        run: |
          cd api/mocha_test
          npm test
        env:
          JWT_SECRET: ${{ secrets.SECRET_KEY }}
          DB_URI: ${{ secrets.URL_MONGO }}
          TOKEN: ${{ env.TOKEN }}

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest

    steps:
      - name: ‚¨áR√©cup√©ration du code source
        uses: actions/checkout@v3

      - name: D√©ploiement sur le serveur
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            cd ../../api
            git pull origin main
            npm install
            pm2 restart api

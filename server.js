require('dotenv').config({ path: './env/.env' });

console.log("üì¢ Chargement des variables d'environnement...");
console.log("DB_URI:", process.env.DB_URI ? "‚úÖ D√©finie" : "‚ùå Non d√©finie");
console.log("PORT:", process.env.PORT || "8080 (par d√©faut)");
console.log("SECRET_KEY:", process.env.SECRET_KEY ? "‚úÖ D√©finie" : "‚ùå Non d√©finie");

// V√©rifier si toutes les variables sont bien d√©finies
if (!process.env.DB_URI || !process.env.SECRET_KEY || !process.env.PORT) {
    console.error("üö® Erreur: Une ou plusieurs variables d'environnement sont manquantes.");
    process.exit(1);
}

const http = require('http');
const app = require('./api/app');
const { initClientDbConnection } = require('./api/db/mongo');

// Capture des erreurs non g√©r√©es pour √©viter les crashs silencieux
process.on('uncaughtException', (err) => {
    console.error("üî• Une erreur non g√©r√©e a √©t√© d√©tect√©e :", err);
    process.exit(1);
});

process.on('unhandledRejection', (reason, promise) => {
    console.error("‚ö†Ô∏è Rejection non g√©r√©e :", reason);
    process.exit(1);
});

console.log("üîÑ Tentative de connexion √† MongoDB...");

// Initialisation de MongoDB avec logs d'erreur d√©taill√©s
initClientDbConnection()
    .then(() => {
        console.log("‚úÖ Connexion MongoDB r√©ussie.");

        const port = process.env.PORT || 8080;
        const server = http.createServer(app);

        server.listen(port, () => {
            console.log(`üöÄ Serveur d√©marr√© sur http://localhost:${port}`);
        });

        // V√©rification que le serveur tourne toujours apr√®s 10s
        setTimeout(() => {
            console.log("‚è≥ Le serveur tourne toujours apr√®s 10s !");
        }, 10000);
    })
    .catch(err => {
        console.error("‚ùå Erreur lors de la connexion √† MongoDB :", err);
        process.exit(1);
    });
